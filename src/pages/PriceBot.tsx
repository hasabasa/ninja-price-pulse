
import { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { mockProducts } from "@/data/mockData";
import { Bot, ChevronsUpDown, TrendingDown, UserRound } from "lucide-react";

const PriceBot = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [products, setProducts] = useState(mockProducts);
  
  const filteredProducts = products.filter(product => 
    product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    product.sku.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const toggleBotStatus = (productId: number) => {
    setProducts(products.map(product => 
      product.id === productId ? { ...product, active: !product.active } : product
    ));
  };

  return (
    <div className="container mx-auto">
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="flex flex-col gap-8"
      >
        <div className="flex flex-col gap-2">
          <h1 className="text-3xl font-bold">üî• –ë–æ—Ç –¥–µ–º–ø–∏–Ω–≥–∞</h1>
          <p className="text-gray-500">–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤</p>
        </div>

        <div className="flex flex-wrap gap-4 items-center">
          <div className="flex-1 min-w-[300px]">
            <Input 
              placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞—Ä—Ç–∏–∫—É–ª—É..." 
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="w-full"
            />
          </div>
          <Button>
            <Bot className="mr-2 h-4 w-4" />
            –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –±–æ—Ç—ã
          </Button>
          <Button variant="outline">
            <Bot className="mr-2 h-4 w-4" />
            –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –±–æ—Ç—ã
          </Button>
        </div>

        <div className="grid grid-cols-1 gap-6">
          {filteredProducts.map((product) => (
            <motion.div
              key={product.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              className="w-full"
            >
              <Card className="overflow-hidden">
                <CardHeader className="bg-gray-50 pb-8">
                  <div className="flex flex-wrap items-start gap-4">
                    <div className="flex-shrink-0 w-24 h-24">
                      <img 
                        src={product.image} 
                        alt={product.name}
                        className="w-full h-full object-contain"
                      />
                    </div>

                    <div className="flex-1 min-w-[300px]">
                      <div className="flex items-center gap-2">
                        <h3 className="font-medium text-lg">{product.name}</h3>
                        <Badge variant={product.active ? "default" : "outline"}>
                          {product.active ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}
                        </Badge>
                      </div>
                      <p className="text-sm text-gray-500 mt-1">–ê—Ä—Ç–∏–∫—É–ª: {product.sku}</p>
                      <div className="flex flex-wrap gap-x-8 gap-y-2 mt-2 text-sm">
                        <div>
                          <span className="text-gray-500">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span> {product.category}
                        </div>
                        <div>
                          <span className="text-gray-500">–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å:</span> {product.cost.toLocaleString()} ‚Ç∏
                        </div>
                        <div>
                          <span className="text-gray-500">–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞:</span> {product.sellingPrice.toLocaleString()} ‚Ç∏
                        </div>
                      </div>
                    </div>

                    <div className="flex gap-2 ml-auto">
                      <Switch 
                        checked={product.active} 
                        onCheckedChange={() => toggleBotStatus(product.id)}
                        id={`bot-switch-${product.id}`}
                      />
                      <Label htmlFor={`bot-switch-${product.id}`}>
                        {product.active ? "–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω" : "–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω"}
                      </Label>
                    </div>
                  </div>
                </CardHeader>

                <CardContent className="pt-6">
                  <Tabs defaultValue="competitors" className="w-full">
                    <TabsList className="mb-4">
                      <TabsTrigger value="competitors">–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã</TabsTrigger>
                      <TabsTrigger value="strategy">–°—Ç—Ä–∞—Ç–µ–≥–∏—è</TabsTrigger>
                      <TabsTrigger value="settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</TabsTrigger>
                    </TabsList>
                    
                    <TabsContent value="competitors" className="space-y-4">
                      <div className="overflow-x-auto">
                        <table className="w-full border-collapse">
                          <thead>
                            <tr className="border-b">
                              <th className="text-left py-2 px-4 font-medium">–ü—Ä–æ–¥–∞–≤–µ—Ü</th>
                              <th className="text-left py-2 px-4 font-medium">–¶–µ–Ω–∞</th>
                              <th className="text-left py-2 px-4 font-medium">–†–µ–π—Ç–∏–Ω–≥</th>
                              <th className="text-left py-2 px-4 font-medium">–î–æ—Å—Ç–∞–≤–∫–∞</th>
                              <th className="text-left py-2 px-4 font-medium">–°—Ç–∞—Ç—É—Å</th>
                            </tr>
                          </thead>
                          <tbody>
                            {product.competitors.map(competitor => (
                              <tr key={competitor.id} className="border-b hover:bg-gray-50">
                                <td className="py-3 px-4">
                                  <div className="flex items-center">
                                    <UserRound className="h-4 w-4 mr-2 text-gray-500" />
                                    <span>{competitor.name}</span>
                                    {competitor.isOfficial && (
                                      <Badge variant="outline" className="ml-2">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π</Badge>
                                    )}
                                  </div>
                                </td>
                                <td className="py-3 px-4">{competitor.price.toLocaleString()} ‚Ç∏</td>
                                <td className="py-3 px-4">{competitor.rating} ‚òÖ</td>
                                <td className="py-3 px-4">{competitor.delivery}</td>
                                <td className="py-3 px-4">
                                  {competitor.price < product.sellingPrice ? (
                                    <Badge variant="destructive" className="flex items-center">
                                      <TrendingDown className="h-3 w-3 mr-1" />
                                      –ù–∏–∂–µ –Ω–∞ {(product.sellingPrice - competitor.price).toLocaleString()} ‚Ç∏
                                    </Badge>
                                  ) : competitor.price > product.sellingPrice ? (
                                    <Badge variant="outline" className="bg-green-100 text-green-800 hover:bg-green-200 flex items-center">
                                      <ChevronsUpDown className="h-3 w-3 mr-1" />
                                      –í—ã—à–µ –Ω–∞ {(competitor.price - product.sellingPrice).toLocaleString()} ‚Ç∏
                                    </Badge>
                                  ) : (
                                    <Badge variant="outline" className="flex items-center">
                                      <ChevronsUpDown className="h-3 w-3 mr-1" />
                                      –†–∞–≤–Ω–∞—è —Ü–µ–Ω–∞
                                    </Badge>
                                  )}
                                </td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                      </div>
                    </TabsContent>
                    
                    <TabsContent value="strategy">
                      <div className="space-y-6">
                        <div className="space-y-2">
                          <h3 className="text-lg font-medium">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é</h3>
                          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <Card className="cursor-pointer border-primary">
                              <CardHeader>
                                <CardTitle className="text-base">ü•á –°—Ç–∞–Ω—å –ø–µ—Ä–≤—ã–º</CardTitle>
                                <CardDescription>–¶–µ–Ω–∞ –Ω–∞ 1 —Ç–≥ –¥–µ—à–µ–≤–ª–µ, —á–µ–º —É –±–ª–∏–∂–∞–π—à–µ–≥–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞</CardDescription>
                              </CardHeader>
                            </Card>
                            <Card className="cursor-pointer">
                              <CardHeader>
                                <CardTitle className="text-base">‚öñÔ∏è –†–∞–≤–Ω–∞—è —Ü–µ–Ω–∞</CardTitle>
                                <CardDescription>–î–µ—Ä–∂–∞—Ç—å —Ü–µ–Ω—É –Ω–∞—Ä–∞–≤–Ω–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–º</CardDescription>
                              </CardHeader>
                            </Card>
                            <Card className="cursor-pointer">
                              <CardHeader>
                                <CardTitle className="text-base">üí∞ –°–≤–æ—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è</CardTitle>
                                <CardDescription>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∞–≤–∏–ª–æ</CardDescription>
                              </CardHeader>
                            </Card>
                          </div>
                        </div>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                          <div className="space-y-2">
                            <h3 className="text-lg font-medium">–ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –ø—Ä–æ–¥–∞–≤—Ü–æ–º</h3>
                            <Select defaultValue="101">
                              <SelectTrigger>
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞..." />
                              </SelectTrigger>
                              <SelectContent>
                                {product.competitors.map(competitor => (
                                  <SelectItem key={competitor.id} value={competitor.id.toString()}>
                                    {competitor.name} - {competitor.price.toLocaleString()} ‚Ç∏
                                  </SelectItem>
                                ))}
                              </SelectContent>
                            </Select>
                          </div>

                          <div className="space-y-2">
                            <h3 className="text-lg font-medium">–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</h3>
                            <Select defaultValue="5">
                              <SelectTrigger>
                                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É..." />
                              </SelectTrigger>
                              <SelectContent>
                                <SelectItem value="1">–ö–∞–∂–¥—ã–π —á–∞—Å</SelectItem>
                                <SelectItem value="2">–ö–∞–∂–¥—ã–µ 3 —á–∞—Å–∞</SelectItem>
                                <SelectItem value="3">–ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤</SelectItem>
                                <SelectItem value="4">–†–∞–∑ –≤ –¥–µ–Ω—å</SelectItem>
                                <SelectItem value="5">–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏</SelectItem>
                              </SelectContent>
                            </Select>
                          </div>
                        </div>
                      </div>
                    </TabsContent>
                    
                    <TabsContent value="settings">
                      <div className="space-y-6">
                        <div className="space-y-4">
                          <div>
                            <h3 className="text-lg font-medium mb-4">–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è</h3>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                              <div className="space-y-4">
                                <div className="space-y-2">
                                  <div className="flex justify-between">
                                    <Label>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞</Label>
                                    <span className="text-sm text-gray-500">{product.cost + 10000} ‚Ç∏</span>
                                  </div>
                                  <Slider defaultValue={[product.cost + 10000]} max={product.cost * 2} step={1000} />
                                </div>
                                
                                <div className="space-y-2">
                                  <div className="flex justify-between">
                                    <Label>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å</Label>
                                    <span className="text-sm text-gray-500">10,000 ‚Ç∏</span>
                                  </div>
                                  <Slider defaultValue={[10000]} max={50000} step={1000} />
                                </div>
                              </div>
                              
                              <div className="space-y-4">
                                <div className="space-y-2">
                                  <div className="flex justify-between">
                                    <Label>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞</Label>
                                    <span className="text-sm text-gray-500">{product.cost * 1.5} ‚Ç∏</span>
                                  </div>
                                  <Slider defaultValue={[product.cost * 1.5]} max={product.cost * 2} step={1000} />
                                </div>
                                
                                <div className="space-y-2">
                                  <div className="flex justify-between">
                                    <Label>–®–∞–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è</Label>
                                    <span className="text-sm text-gray-500">100 ‚Ç∏</span>
                                  </div>
                                  <Slider defaultValue={[100]} min={1} max={10000} step={100} />
                                </div>
                              </div>
                            </div>
                          </div>
                          
                          <div className="pt-4 flex justify-end gap-2">
                            <Button variant="outline">–û—Ç–º–µ–Ω–∏—Ç—å</Button>
                            <Button>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</Button>
                          </div>
                        </div>
                      </div>
                    </TabsContent>
                  </Tabs>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>
      </motion.div>
    </div>
  );
};

export default PriceBot;
